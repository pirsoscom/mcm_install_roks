# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Install Script for Open LDAP
#
# V1.0 
#
# Â©2020 nikh@ch.ibm.com
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

source ./0_variables.sh

# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Do Not Edit Below
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "  "
echo " ${CYAN}  Open LDAP for OpenShift 4.3${NC}"
echo "  "
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "  "
echo "  "
echo "  "



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# GET PARAMETERS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Input Parameters${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"

        while getopts "d:h:p:x:" opt
        do
          case "$opt" in
              x ) INPUT_CONSOLE_PREFIX="$OPTARG";;
              d ) INPUT_PATH="$OPTARG" ;;
              h ) INPUT_CLUSTER_NAME="$OPTARG" ;;
              p ) INPUT_PWD="$OPTARG" ;;
          esac
        done


        if [[ $INPUT_CONSOLE_PREFIX == "" ]];
        then
            echo "    ${RED}ERROR${NC}: Please provide the OCP console prefix (for example console)"
          echo "    USAGE: $0 -p <LDAP_ADMIN_PASSWORD> -x <OCP_CONSOLE_PREFIX> [-h <CLUSTER_NAME>]  [-d <TEMP_DIRECTORY>] "
            exit 1
        else
          echo "    ${GREEN}Console Prefix OK:${NC}                  '$INPUT_CONSOLE_PREFIX'"
          OCP_CONSOLE_PREFIX=$INPUT_CONSOLE_PREFIX
        fi



        if [[ $INPUT_PWD == "" ]];
        then
            echo "    ${RED}ERROR${NC}: Please provide the LDAP admin password"
          echo "    USAGE: $0 -p <LDAP_ADMIN_PASSWORD> -x <OCP_CONSOLE_PREFIX> [-h <CLUSTER_NAME>]  [-d <TEMP_DIRECTORY>] "
            exit 1
        else
          echo "     ${GREEN}LDAP Password OK:${NC}                  '$INPUT_PWD'"
          LDAP_USER_PASSWORD=$INPUT_PWD
        fi



        if [[ $INPUT_PATH == "" ]];
        then
          echo "    ${ORANGE}No Path provided, using${NC}             '$TEMP_PATH'"
        else
          echo "    ${GREEN}Path OK:${NC}                            '$INPUT_PATH'"
          TEMP_PATH=$INPUT_PATH
        fi


        if [[ ($INPUT_CLUSTER_NAME == "") ]];
        then
          getClusterFQDN
        fi


echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PRE-INSTALL CHECKS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Pre-Install Checks${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"

        checkHelmExecutable

        checkCloudctlExecutable

        checkOpenshiftReachable

        checkKubeconfigIsSet

        #checkHelmChartInstalled "openldap"

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "



# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Define some Stuff
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Define some Stuff${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"

        getInstallPath

        BASE_DN="dc="$(echo $LDAP_DOMAIN | ${SED} -e "s/\./,dc=/")
        BIND_DN="cn=admin,"$BASE_DN


echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONFIG SUMMARY
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN}  Open LDAP will be integrated into Cluster ${ORANGE}'$CLUSTER_NAME'${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "-${GREEN}--------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${BLUE}Your configuration${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}CLUSTER :${NC}                    $CLUSTER_NAME"
echo "    ${GREEN}TEMP PATH:${NC}                   $TEMP_PATH"
echo "    ${BLUE}LDAP Parameters for admin user (change these in variables.sh)${NC}"
echo "      ${GREEN}LDAP_DOMAIN :${NC}              $LDAP_DOMAIN"
echo "      ${GREEN}BASE_DN :${NC}                  $BASE_DN"
echo "      ${GREEN}BIND_DN :${NC}                  $BIND_DN"
echo "      ${GREEN}LDAP_ADMIN_PASSWORD :${NC}      $LDAP_ADMIN_PASSWORD"
echo "    ${BLUE}Additional User (change these in variables.sh)${NC}"
echo "      ${GREEN}LDAP_USER_GROUP :${NC}          $LDAP_USER_GROUPS"
echo "      ${GREEN}LDAP_USER :${NC}                $LDAP_USER"
echo "      ${GREEN}LDAP_USER_PASSWORD :${NC}       $LDAP_USER_PASSWORD"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${RED}Continue Installation with these Parameters? [y,N]${NC}"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}---------------------------------------------------------------------------------------------------------------------------${NC}"
        read -p "[y,N]" DO_COMM
        if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then
          echo "${GREEN}Continue...${NC}"
        else
          echo "${RED}Installation Aborted${NC}"
          exit 2
        fi
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PREREQUISITES
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${CYAN}Running Prerequisites${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"

        export SCRIPT_PATH=$(pwd)

        oc adm policy add-scc-to-user anyuid -z default -n root

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# INSTALL
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${ORANGE}Do you want to install ${CYAN}Open LDAP${NC} into Cluster '$CLUSTER_NAME' with the above configuration?${NC}"
echo ""
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"

read -p "Install? [y,N]" DO_COMM
if [[ $DO_COMM == "y" ||  $DO_COMM == "Y" ]]; then

        echo "Install OpenLDAP Helm Chart"
        $HELM_BIN install --name openldap ./tools/ldap/openldap  \
            --set-string OpenLdap.Domain=$LDAP_DOMAIN \
            --set-string OpenLdap.AdminPassword=$LDAP_ADMIN_PASSWORD \
            --set-string OpenLdap.SeedUsers.usergroup=$LDAP_USER_GROUPS \
            --set-string OpenLdap.SeedUsers.userlist=$LDAP_USER \
            --set-string OpenLdap.SeedUsers.passw0rd=$LDAP_USER_PASSWORD \
            --set-string OpenLdap.Route=$CLUSTER_NAME \
            --tls


        echo "---------------------------------------------------------------------------------------------------------------------------"
        echo "---------------------------------------------------------------------------------------------------------------------------"
        echo " ${BLUE}Login to PHP LDAP Admin${NC}"
        echo "   GUI is here: http://openldap-admin-default.$CLUSTER_NAME"
        echo ""
        echo "   $BIND_DN"
        echo "   $LDAP_ADMIN_PASSWORD"
        echo ""
        echo ""
        echo " ${BLUE}Configuration for MCM${NC}"
        echo "   Server type: Custom"
        echo "   Base DN: $BASE_DN"
        echo "   Bind DN: $BIND_DN"
        echo "   URL: ldap://openldap.default:389"
        echo ""
        echo "   User filter: (&(uid=%v)(objectclass=Person))"
        echo ""
        echo ""
        echo ""


            echo "Waiting for OpenLdap Pod to become Ready... (sleeping for 4 minutes before checking)"
            sleep 60
            kubectl wait --for=condition=Ready pods -l app=openldap -n default
            
            echo "Waiting 10s to let it initialize..."
            sleep 10
            echo "ldapadd -x -D $BIND_DN -w $LDAP_ADMIN_PASSWORD -H ldap://openldap-default.$CLUSTER_NAME:32314 -f ./tools/ldap/import.ldif"


        
else
    echo "${RED}Installation Aborted${NC}"
    exit 1
fi



echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN} Open LDAP Installation.... DONE${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"


